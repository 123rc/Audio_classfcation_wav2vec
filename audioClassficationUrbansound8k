{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "18d1af80",
   "metadata": {
    "_cell_guid": "b1076dfc-b9ad-4769-8c92-a6c4dae69d19",
    "_uuid": "8f2839f25d086af736a60e9eeb907d3b93b6e0e5",
    "execution": {
     "iopub.execute_input": "2024-06-29T13:17:52.703557Z",
     "iopub.status.busy": "2024-06-29T13:17:52.703113Z",
     "iopub.status.idle": "2024-06-29T13:17:58.453949Z",
     "shell.execute_reply": "2024-06-29T13:17:58.452638Z"
    },
    "papermill": {
     "duration": 5.758793,
     "end_time": "2024-06-29T13:17:58.457180",
     "exception": false,
     "start_time": "2024-06-29T13:17:52.698387",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "from torch.utils.data import Dataset\n",
    "import pandas as pd\n",
    "import torchaudio\n",
    "import os\n",
    "import torch"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "1a3006eb",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-29T13:17:58.465109Z",
     "iopub.status.busy": "2024-06-29T13:17:58.464575Z",
     "iopub.status.idle": "2024-06-29T13:17:58.478266Z",
     "shell.execute_reply": "2024-06-29T13:17:58.476853Z"
    },
    "papermill": {
     "duration": 0.020443,
     "end_time": "2024-06-29T13:17:58.480735",
     "exception": false,
     "start_time": "2024-06-29T13:17:58.460292",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "class UrbanSoundDataset(Dataset):\n",
    "    def __init__(self, annotations_file, audio_dir,transformation,\n",
    "                 target_sample_rate):\n",
    "        self.annotations = pd.read_csv(annotations_file)\n",
    "        self.audio_dir = audio_dir\n",
    "        self.transformation = transformation\n",
    "        self.target_sample_rate = target_sample_rate\n",
    "\n",
    "    def __len__(self):\n",
    "        return len(self.annotations)\n",
    "\n",
    "    def __getitem__(self, index):\n",
    "        audio_sample_path = self._get_audio_sample_path(index)\n",
    "        label = self._get_audio_sample_label(index)\n",
    "        signal, sr = torchaudio.load(audio_sample_path)\n",
    "        signal = self._resample_if_necessary(signal, sr)\n",
    "        signal = self._mix_down_if_necessary(signal)\n",
    "        signal = self.transformation(signal)\n",
    "        return signal, label\n",
    "    def _resample_if_necessary(self, signal, sr):\n",
    "        if sr != self.target_sample_rate:\n",
    "            \n",
    "            resampler = torchaudio.transforms.Resample(sr, self.target_sample_rate)\n",
    "            signal = resampler(signal)\n",
    "        return signal\n",
    "    def _mix_down_if_necessary(self, signal):\n",
    "        if signal.shape[0] > 1:\n",
    "            signal = torch.mean(signal, dim=0, keepdim=True)\n",
    "        return signal\n",
    "\n",
    "    def _get_audio_sample_path(self, index):\n",
    "        fold = f\"fold{self.annotations.iloc[index, 5]}\"\n",
    "        path = os.path.join(self.audio_dir, fold, self.annotations.iloc[\n",
    "            index, 0])\n",
    "        return path\n",
    "\n",
    "    def _get_audio_sample_label(self, index):\n",
    "        return self.annotations.iloc[index, 6]\n",
    "\n",
    "   \n",
    "        "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "606d1b48",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-29T13:17:58.488007Z",
     "iopub.status.busy": "2024-06-29T13:17:58.487611Z",
     "iopub.status.idle": "2024-06-29T13:17:58.866535Z",
     "shell.execute_reply": "2024-06-29T13:17:58.865249Z"
    },
    "papermill": {
     "duration": 0.385997,
     "end_time": "2024-06-29T13:17:58.869591",
     "exception": false,
     "start_time": "2024-06-29T13:17:58.483594",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "There are 8732 samples in the dataset.\n"
     ]
    }
   ],
   "source": [
    "if __name__ == \"__main__\":\n",
    "    ANNOTATIONS_FILE = \"/kaggle/input/urbansound8k/UrbanSound8K.csv\"\n",
    "    AUDIO_DIR = \"/kaggle/input/urbansound8k\"\n",
    "    SAMPLE_RATE = 16000\n",
    "\n",
    "    mel_spectrogram = torchaudio.transforms.MelSpectrogram(\n",
    "        sample_rate=SAMPLE_RATE,\n",
    "        n_fft=1024,\n",
    "        hop_length=512,\n",
    "        n_mels=64\n",
    "    )\n",
    "\n",
    "    usd = UrbanSoundDataset(ANNOTATIONS_FILE, AUDIO_DIR, mel_spectrogram,\n",
    "                            SAMPLE_RATE)\n",
    "    print(f\"There are {len(usd)} samples in the dataset.\")\n",
    "    signal, label = usd[0]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "84e09167",
   "metadata": {
    "papermill": {
     "duration": 0.002429,
     "end_time": "2024-06-29T13:17:58.874835",
     "exception": false,
     "start_time": "2024-06-29T13:17:58.872406",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kaggle": {
   "accelerator": "none",
   "dataSources": [
    {
     "datasetId": 500970,
     "sourceId": 928025,
     "sourceType": "datasetVersion"
    }
   ],
   "dockerImageVersionId": 30732,
   "isGpuEnabled": false,
   "isInternetEnabled": true,
   "language": "python",
   "sourceType": "notebook"
  },
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.10.13"
  },
  "papermill": {
   "default_parameters": {},
   "duration": 10.531996,
   "end_time": "2024-06-29T13:17:59.901668",
   "environment_variables": {},
   "exception": null,
   "input_path": "__notebook__.ipynb",
   "output_path": "__notebook__.ipynb",
   "parameters": {},
   "start_time": "2024-06-29T13:17:49.369672",
   "version": "2.5.0"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
